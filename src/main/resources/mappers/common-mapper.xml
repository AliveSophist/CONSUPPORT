<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 해당 파일에 모든 쿼리문을 작성 -->
<mapper namespace="commonMapper">

	<resultMap type="kh.study.consupport.common.vo.UsersVO" id="user">
		<id column="USER_ID" 				property="userId"/>
		<result column="USER_PW" 			property="userPw"/>
		<result column="USER_NAME" 			property="userName"/>
		<result column="USER_ADDR" 			property="userAddr"/>
		<result column="USER_ADDR_DETAIL" 	property="userAddrDetail"/>
		<result column="USER_EMAIL" 		property="userEmail"/>
		<result column="USER_BIRTH" 		property="userBirth"/>
		<result column="USER_TELL" 			property="userTell"/>
		<result column="USER_MILEAGE" 		property="userMileage"/>
		<result column="USER_ROLE" 			property="userRole"/>
		<result column="USER_STATUS" 		property="userStatus"/>
	</resultMap>
	

	<resultMap type="kh.study.consupport.common.vo.TicketVO" id="ticket">
		<id column="TICKET_CODE" 			property="ticketCode"/>
		<result column="SEAT_CODE" 			property="seatCode"/>
		<result column="USER_ID" 			property="userId"/>
		<result column="HALL_CODE" 			property="hallCode"/>
		<result column="CONCERT_CODE" 		property="concertCode"/>
		
		<result column="SEAT_STATUS" 			property="seatStatus"/>
	</resultMap>
	
	
	
	<!-- Join -->
	<insert id="insertUser">
		INSERT INTO USERS(
		    USER_ID
		    , USER_PW
		    , USER_NAME
		    , USER_ADDR
		    , USER_ADDR_DETAIL
		    , USER_BIRTH
		    , USER_TELL
		) VALUES(
		    #{userId}
		    , #{userPw}
		    , #{userName}
		    , #{userAddr}
		    , #{userAddrDetail}
		    , #{userBirth}
		    , #{userTell}
		)
	</insert>
	
	
	
	<!-- Login -->
	<select id="login" resultMap="user">
		SELECT
			USER_ID
			, USER_PW
			, USER_ROLE
		FROM USERS
		WHERE
			USER_ID = #{userId}
	</select>
	
	<!-- get LoginInfo -->
	<select id="selectLoginInfo" resultMap="user">
		SELECT
			USER_ID
			, USER_NAME
			, USER_ROLE
		FROM USERS
		WHERE
			USER_ID = #{userId}
	</select>


	<select id="selectTicketList" resultMap="ticket">
		SELECT
			TICKET_CODE
			, SEAT_CODE
			, (DECODE(USER_ID, null		, 'EMPTY'
										, 'BOOKED')) AS SEAT_STATUS
		FROM TICKET
		WHERE CONCERT_CODE = #{concertCode}
		ORDER BY TICKET_CODE
	</select>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	<!-- 구매(티켓팅) 관련 -->
	<select id="isExistWaitStatus" resultType="String">
		SELECT
			TICKET_CODE
		FROM
			SALES, SALES_DETAIL
		WHERE
			SALES.SALES_CODE = SALES_DETAIL.SALES_CODE
		AND SALES_STATUS IN ('WAIT', 'PAID')
		AND TICKET_CODE IN(
		<foreach collection="ticketCodeList" item="ticketCode" separator=" , ">
			#{ticketCode}
		</foreach>
		)
	</select>
	
	<select id="getNextSalesCode" resultType="String">
		SELECT
			'SALES_' || LPAD( NVL( MAX( TO_NUMBER(SUBSTR(SALES_CODE,7)) )+1, 1), 6, '0')
		FROM SALES
	</select>
	<insert id="insertSales">
		INSERT INTO SALES(
		    SALES_CODE
		    , SALES_AMOUNT
		    , SALES_TOTAL_PRICE
		    , USER_ID
		    , HALL_CODE
		    , CONCERT_CODE
		) VALUES(
		    #{salesCode}
		    , #{salesAmount}
		    , #{salesTotalPrice}
		    , #{userId}
		    , #{hallCode}
		    , #{concertCode}
		)
	</insert>
	<insert id="insertSalesDetail">
		INSERT INTO SALES_DETAIL(
		    SALES_DETAIL_CODE
		    , SALES_CODE
		    , TICKET_CODE
		)
		<foreach collection="ticketCodeList" item="ticketCode" separator="UNION ALL" index="i">
			SELECT
				(SELECT #{salesCode}||'_'||LPAD(1+#{i}, 2, '0') FROM DUAL)
			    , #{salesCode}
			    , #{ticketCode}
			FROM DUAL
		</foreach>
	</insert>
	
	
	
	
	
	<select id="checkTicketingList" resultMap="ticket">
		SELECT
			TICKET_CODE
		FROM TICKET
		WHERE TICKET_CODE IN(
		<foreach collection="ticketCodeList" item="ticketCode" separator=" , ">
			#{ticketCode}
		</foreach>
		)
		AND USER_ID IS NULL
	</select>
	
	<update id="updateSales">
		UPDATE SALES
		SET
			SALES_STATUS = #{salesStatus} <!-- 'PAID' or 'CANCELED' -->
		WHERE
			SALES_CODE =  #{salesCode}
	</update>
	
	<update id="letsTicketing">
		UPDATE TICKET
		SET
			USER_ID = #{userId}
		WHERE TICKET_CODE IN(
		<foreach collection="ticketCodeList" item="ticketCode" separator=" , ">
			#{ticketCode}
		</foreach>
		)
	</update>
	
	<update id="refundAll">
		UPDATE TICKET
		SET
			USER_ID = null
		WHERE TICKET_CODE IN(
			SELECT
				TICKET_CODE
			FROM
				SALES_DETAIL
			WHERE
				SALES_CODE = #{salesCode}
		)
	</update>

	
</mapper>
