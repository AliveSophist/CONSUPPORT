<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 해당 파일에 모든 쿼리문을 작성 -->
<mapper namespace="testMapper">

	<resultMap type="kh.study.consupport.common.vo.UsersVO" id="user">
		<id column="USER_ID" 				property="userId"/>
		<result column="USER_PW" 			property="userPw"/>
		<result column="USER_NAME" 			property="userName"/>
		<result column="USER_ADDR" 			property="userAddr"/>
		<result column="USER_ADDR_DETAIL" 	property="userAddrDetail"/>
		<result column="USER_EMAIL" 		property="userEmail"/>
		<result column="USER_BIRTH" 		property="userBirth"/>
		<result column="USER_TELL" 			property="userTell"/>
		<result column="USER_MILEAGE" 		property="userMileage"/>
		<result column="USER_ROLE" 			property="userRole"/>
		<result column="USER_STATUS" 		property="userStatus"/>
	</resultMap>
	
	
	
	

	<resultMap type="kh.study.consupport.common.vo.TicketVO" id="ticket">
		<id column="TICKET_CODE" 			property="ticketCode"/>
		<result column="SEAT_CODE" 			property="seatCode"/>
		<result column="USER_ID" 			property="userId"/>
		<result column="HALL_CODE" 			property="hallCode"/>
		<result column="CONCERT_CODE" 		property="concertCode"/>
		
		<result column="SEAT_STATUS" 			property="seatStatus"/>
	</resultMap>
	
	
	
	
	
	
	
	<!-- 콘서트 -->
	<resultMap type="kh.study.consupport.common.vo.ConcertVO" id="concert">
		<id column="CONCERT_CODE"					property="concertCode"/>
		<result column="CONCERT_NAME" 			 	property="concertName"/>
		<result column="CONCERT_STATUS" 		 	property="concertStatus"/>
		<result column="CONCERT_RATED" 			 	property="concertRated"/>
		<result column="CONCERT_TICKETING_DATE" 	property="concertTicketingDate"/>
		<result column="HALL_DATE_CODE" 			property="hallDateCode"/>
		<result column="GENRE_CODE"					property="genreCode"/>
		<result column="HALL_CODE" 					property="hallCode"/>
		<result column="USER_ID" 					property="userId"/>
		<result column="HALL_DATE_CODDE" 			property="userId"/>
		
		<result column="GENRE_NAME" 				property="genreName"/>
		<result column="CONCERT_DATE" 				property="concertDate"/>
		
		<association property="artist" 				resultMap="artist"/>
		<association property="concertPrice"		resultMap="concertPrice"/>
		<collection property="concertImgList" 		resultMap="concertImg"/>
	</resultMap>
	
	<!-- 콘서트 이미지 -->
	<resultMap type="kh.study.consupport.common.vo.ConcertImgVO" id="concertImg">
		<id column="CONCERT_IMG_CODE" 				property="concertImgCode"/>
		<result column="CONCERT_IMG_NAME_ORIGIN" 	property="concertImgNameOrigin"/>
		<result column="CONCERT_IMG_NAME_ATTACHED" 	property="concertImgNameAttached"/>
		<result column="CONCERT_IMG_IS_MAIN"		property="concertImgIsMain"/>
		<result column="CONCERT_CODE" 				property="concertCode"/>
	</resultMap>
	
	<!-- 아티스트 (콘서트 상세 조회용) -->
	<resultMap type="kh.study.consupport.common.vo.ArtistVO" id="artist">
		<id column="USER_ID" 					property="userId"/>
		<result column="ARTIST_NAME" 			property="artistName"/>
		<result column="ARTIST_DETAIL" 			property="artistDetail"/>
		
		<association property="artistImg" 	resultMap="artistImg"/>
	</resultMap>
	
	<!-- 아티스트 (아티스트 상세 조회용) -->
	<resultMap type="kh.study.consupport.common.vo.ArtistVO" id="artistDetail">
		<id column="USER_ID" 					property="userId"/>
		<result column="ARTIST_NAME" 			property="artistName"/>
		<result column="ARTIST_DETAIL" 			property="artistDetail"/>

		<collection property="artistImgList" 	resultMap="artistImg"/>
	</resultMap>
	
	<!--아티스트 이미지  -->
	<resultMap type="kh.study.consupport.common.vo.ArtistImgVO" id="artistImg">
		<id column="ARTIST_IMG_CODE" 				property="artistImgCode"/>
		<result column="ARTIST_IMG_NAME_ORIGIN" 	property="artistImgNameOrigin"/>
		<result column="ARTIST_IMG_NAME_ATTACHED" 	property="artistImgNameAttached"/>
		<result column="ARTIST_IMG_IS_MAIN" 		property="artistImgIsMain"/>
		<result column="USER_ID" 					property="userId"/>
	</resultMap>
	
	<!-- 콘서트 프라이스 -->
	<resultMap type="kh.study.consupport.common.vo.ConcertPriceVO" id="concertPrice">
		<id column="CONCERT_CODE" 					property="concertCode"/>
		<result column="CONCERT_PRICE_R" 			property="concertPriceR"/>
		<result column="CONCERT_PRICE_S" 			property="concertPriceS"/>
		<result column="CONCERT_PRICE_A" 			property="concertPriceA"/>
	</resultMap>
		
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	<!-- Join -->
	<insert id="insertUser">
		INSERT INTO USERS(
		    USER_ID
		    , USER_PW
		    , USER_NAME
		    , USER_ADDR
		    , USER_ADDR_DETAIL
		    , USER_BIRTH
		    , USER_TELL
		) VALUES(
		    #{userId}
		    , #{userPw}
		    , #{userName}
		    , #{userAddr}
		    , #{userAddrDetail}
		    , #{userBirth}
		    , #{userTell}
		)
	</insert>
	
	
	
	<!-- Login -->
	<select id="login" resultMap="user">
		SELECT
			USER_ID
			, USER_PW
			, USER_ROLE
		FROM USERS
		WHERE
			USER_ID = #{userId}
	</select>
	
	<!-- get LoginInfo -->
	<select id="selectLoginInfo" resultMap="user">
		SELECT
			USER_ID
			, USER_NAME
			, USER_ROLE
		FROM USERS
		WHERE
			USER_ID = #{userId}
	</select>


	<select id="selectTicketList" resultMap="ticket">
		SELECT
			TICKET_CODE
			, SEAT_CODE
			, (DECODE(USER_ID, null		, 'EMPTY'
										, 'BOOKED')) AS SEAT_STATUS
		FROM TICKET
		WHERE CONCERT_CODE = #{concertCode}
		ORDER BY TICKET_CODE
	</select>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	<!-- 구매(티켓팅) 관련 -->
	<select id="selectConcertPrice" resultMap="concertPrice">
		SELECT
			CONCERT_PRICE_R
			, CONCERT_PRICE_S
			, CONCERT_PRICE_A
		FROM CONCERT_PRICE
		WHERE CONCERT_CODE = #{concertCode}
	</select>
	
	<select id="isExistWaitStatus" resultType="String">
		SELECT
			TICKET_CODE
		FROM
			SALES, SALES_DETAIL
		WHERE
			SALES.SALES_CODE = SALES_DETAIL.SALES_CODE
		AND SALES_STATUS IN ('WAIT', 'PAID')
		AND TICKET_CODE IN(
		<foreach collection="ticketCodeList" item="ticketCode" separator=" , ">
			#{ticketCode}
		</foreach>
		)
	</select>
	
	<select id="getNextSalesCode" resultType="String">
		SELECT
			'SALES_' || LPAD( NVL( MAX( TO_NUMBER(SUBSTR(SALES_CODE,7)) )+1, 1), 6, '0')
		FROM SALES
	</select>
	<insert id="insertSales">
		INSERT INTO SALES(
		    SALES_CODE
		    , SALES_AMOUNT
		    , SALES_TOTAL_PRICE
		    , USER_ID
		    , HALL_CODE
		    , CONCERT_CODE
		) VALUES(
		    #{salesCode}
			, #{hallseat.hallSeatRCnt}+#{hallseat.hallSeatSCnt}+#{hallseat.hallSeatACnt}
			, (	(	SELECT CONCERT_PRICE_R * #{hallseat.hallSeatRCnt}
		    		FROM CONCERT_PRICE
		    		WHERE CONCERT_CODE = #{concertCode}	) +
		    	(	SELECT CONCERT_PRICE_S * #{hallseat.hallSeatSCnt}
			    	FROM CONCERT_PRICE
			    	WHERE CONCERT_CODE = #{concertCode}	) +
		    	(	SELECT CONCERT_PRICE_A * #{hallseat.hallSeatACnt}
			    	FROM CONCERT_PRICE
			    	WHERE CONCERT_CODE = #{concertCode}	)	)
			, #{userId}
			, #{hallCode}
			, #{concertCode}
		)
	</insert>
	<insert id="insertSalesDetail">
		INSERT INTO SALES_DETAIL(
		    SALES_DETAIL_CODE
		    , SALES_CODE
		    , TICKET_CODE
		)
		<foreach collection="ticketCodeList" item="ticketCode" separator="UNION ALL" index="i">
			SELECT
				(SELECT #{salesCode}||'_'||LPAD(1+#{i}, 2, '0') FROM DUAL)
			    , #{salesCode}
			    , #{ticketCode}
			FROM DUAL
		</foreach>
	</insert>
	
	
	<select id="checkTicketingList" resultMap="ticket">
		SELECT
			TICKET_CODE
		FROM TICKET
		WHERE TICKET_CODE IN(
		<foreach collection="ticketCodeList" item="ticketCode" separator=" , ">
			#{ticketCode}
		</foreach>
		)
		AND USER_ID IS NULL
	</select>
	
	<update id="updateSales">
		UPDATE SALES
		SET
			SALES_STATUS = #{salesStatus} <!-- 'PAID' or 'CANCELED' -->
		WHERE
			SALES_CODE =  #{salesCode}
	</update>
	
	<update id="letsTicketing">
		UPDATE TICKET
		SET
			USER_ID = #{userId}
		WHERE TICKET_CODE IN(
		<foreach collection="ticketCodeList" item="ticketCode" separator=" , ">
			#{ticketCode}
		</foreach>
		)
	</update>
	
	<update id="refundAll">
		UPDATE TICKET
		SET
			USER_ID = null
		WHERE TICKET_CODE IN(
			SELECT
				TICKET_CODE
			FROM
				SALES_DETAIL
			WHERE
				SALES_CODE = #{salesCode}
		)
	</update>






	

	<!-- 메인화면 콘서트 목록 조회 -->
	<select id="selectConcertListOfCommon" resultMap="concert">
        <!--  SELECT CON.CONCERT_CODE
			, CONCERT_NAME
			, CONCERT_IMG_CODE
			, CONCERT_RATED
			, (SELECT HALL_RENT_DATE
                FROM HALL_DATE
                WHERE HALL_DATE_CODE = CON.HALL_DATE_CODE) AS CONCERT_DATE
			
			, CONCERT_IMG_NAME_ATTACHED
            , CONCERT_IMG_IS_MAIN
            
            , CON.USER_ID
            , ART.ARTIST_NAME
            , ARTIST_IMG_NAME_ATTACHED
            , ARTIST_IMG_IS_MAIN
            
		FROM CONCERT CON, CONCERT_IMG CONI, ARTIST ART, ARTIST_IMG ARTI
        WHERE CON.CONCERT_CODE = CONI.CONCERT_CODE
        AND CON.USER_ID = ART.USER_ID
        AND ART.USER_ID = ARTI.USER_ID
        AND CONCERT_IMG_IS_MAIN = 'Y'
        AND ARTIST_IMG_IS_MAIN = 'Y'
        
		AND CONCERT_STATUS = 'ACT'
        
        ORDER BY CONCERT_CODE DESC -->

	SELECT ROW_NUM
		, CONCERT_CODE
		, CONCERT_NAME
		, CONCERT_IMG_CODE
		, CONCERT_RATED
		, CONCERT_DATE
	
		, CONCERT_IMG_NAME_ATTACHED
		, CONCERT_IMG_IS_MAIN
	
		, USER_ID
		, ARTIST_NAME
		, ARTIST_IMG_NAME_ATTACHED
		, ARTIST_IMG_IS_MAIN
	FROM
		(SELECT CON.CONCERT_CODE
			, CONCERT_NAME
			, CONCERT_IMG_CODE
			, CONCERT_RATED
			, HALL_RENT_DATE AS CONCERT_DATE
		
			, CONCERT_IMG_NAME_ATTACHED
			, CONCERT_IMG_IS_MAIN
		
			, CON.USER_ID
			, ART.ARTIST_NAME
			, ARTIST_IMG_NAME_ATTACHED
			, ARTIST_IMG_IS_MAIN
		
			, ROW_NUMBER() OVER (ORDER BY CON.CONCERT_CODE DESC) ROW_NUM

		FROM CONCERT CON, CONCERT_IMG CONI, HALL_DATE HDATE, ARTIST ART, ARTIST_IMG
		ARTI
		WHERE CON.CONCERT_CODE = CONI.CONCERT_CODE
		AND CON.USER_ID = ART.USER_ID
		AND ART.USER_ID = ARTI.USER_ID
		AND HDATE.HALL_DATE_CODE = CON.HALL_DATE_CODE
	
		AND CONCERT_IMG_IS_MAIN = 'Y'
		AND ARTIST_IMG_IS_MAIN = 'Y'
		AND HALL_RENT_DATE >= (SELECT SYSDATE FROM DUAL)
		AND CONCERT_STATUS = 'ACT')
		
	WHERE ROW_NUM BETWEEN  (8 * (${pageNum}-1) + 1) AND (8 * ${pageNum})
	</select>
	
	
	
	<!-- ======================================================================================================================================================================================================================== -->
	
	
	
	
	<!-- ======================================================================================================================================================================================================================== -->
	
	
	
	
	
	
	
	<!-- 메인화면 스페셜콘서트 목록 조회 -->
	<select id="selectSpecialConcertListOfCommon" resultMap="concert">
         SELECT CON.CONCERT_CODE
			, CONCERT_NAME
			, CONCERT_IMG_CODE
			, CONCERT_RATED
			, (SELECT HALL_RENT_DATE
                FROM HALL_DATE
                WHERE HALL_DATE_CODE = CON.HALL_DATE_CODE) AS CONCERT_DATE
			
			, CONCERT_IMG_NAME_ATTACHED
            , CONCERT_IMG_IS_MAIN
            
            , CON.USER_ID
            , ART.ARTIST_NAME
            , ARTIST_IMG_NAME_ATTACHED
            , ARTIST_IMG_IS_MAIN
            
            , REG_DATE
            
		FROM CONCERT CON, CONCERT_IMG CONI, ARTIST ART, ARTIST_IMG ARTI, SPECIAL_CONCERT SCON
        WHERE CON.CONCERT_CODE = CONI.CONCERT_CODE
        AND CON.USER_ID = ART.USER_ID
        AND ART.USER_ID = ARTI.USER_ID
        AND CON.CONCERT_CODE = SCON.CONCERT_CODE
        AND CONCERT_IMG_IS_MAIN = 'Y'
        AND ARTIST_IMG_IS_MAIN = 'Y'
        
        AND CON.CONCERT_CODE IN (SELECT CONCERT_CODE 
        					 FROM SPECIAL_CONCERT)
        
		AND CONCERT_STATUS = 'ACT'
        
        ORDER BY REG_DATE
	</select>

	<!-- 콘서트 상세 조회 -->
	<select id="selectConcertDetail" resultMap="concert">
		SELECT CON.CONCERT_CODE
			, CONCERT_NAME
			, CONCERT_RATED
			, CONCERT_TICKETING_DATE
			, CON.HALL_CODE
			
			, (	SELECT GENRE_NAME
                FROM GENRE
                WHERE GENRE_CODE = CON.GENRE_CODE) AS GENRE_NAME
                
			, (	SELECT HALL_RENT_DATE
                FROM HALL_DATE
                WHERE HALL_DATE_CODE = CON.HALL_DATE_CODE) AS CONCERT_DATE
            
			, CONCERT_IMG_NAME_ATTACHED
			, CONCERT_IMG_IS_MAIN
            
			, CONCERT_PRICE_R
			, CONCERT_PRICE_S
			, CONCERT_PRICE_A
            
            , ART.USER_ID
			, ART.ARTIST_NAME
			, ARTIST_IMG_NAME_ATTACHED
			, ARTIST_IMG_IS_MAIN
            
		FROM CONCERT CON
           , CONCERT_IMG CONI
           , CONCERT_PRICE CONP
           , ARTIST ART
           , ARTIST_IMG ARTI
		WHERE CON.CONCERT_CODE = CONI.CONCERT_CODE
		AND CON.CONCERT_CODE = CONP.CONCERT_CODE
        AND CON.USER_ID = ART.USER_ID
        AND CON.USER_ID = ARTI.USER_ID
        AND ARTIST_IMG_IS_MAIN = 'Y'
        AND CON.CONCERT_CODE = #{concertCode}
        ORDER BY CONCERT_CODE ASC
	</select>

	<!-- 아티스트 상세 조회 -->
	<select id="selectArtistDetail" resultMap="artist">
		SELECT ART.USER_ID
            , ARTIST_NAME
            , ARTIST_DETAIL
            , ARTIST_IMG_NAME_ATTACHED
            , ARTIST_IMG_IS_MAIN
        FROM ARTIST ART, ARTIST_IMG ARTI
        WHERE ART.USER_ID = ARTI.USER_ID
        AND ART.USER_ID = #{userId}
	</select>













	
</mapper>
